plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'maven-publish'
}
group = 'com.simas'
version = '0.0.2-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "$mavenUrlpublic"
    }
}


dependencies {
    implementation 'com.oracle.database.jdbc:ojdbc8:23.2.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation group: 'io.beanmapper', name: 'beanmapper-spring-boot-starter', version: '5.0.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.72.Final:osx-aarch_64'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.4"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = "MyRepo" //  optional target repository name
            credentials {
                username "$mavenUser"
                password "$mavenPassword"
            }
            if (project.version.endsWith('-SNAPSHOT')) {
                url "$mavenUrlsnapshots"
            } else {
                url "$mavenUrlreleases"
            }
        }
    }
    publications {
        bootJava(MavenPublication) {
            artifact bootJar
        }
    }
}
